{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","selectedGoods","isSelected","item","includes","splice","indexOf","setState","setClearList","setTitle","length","title","map","join","this","className","classNames","selected","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQIC,E,4MACJC,MAAe,CACbC,MAAM,GAAD,OAAMH,GACXI,cAAe,I,EAGjBC,WAAa,SAACC,EAAcF,GACrB,EAAKF,MAAME,cAAcG,SAASD,IAGrCF,EAAcI,OAAOJ,EAAcK,QAAQH,GAAO,GAClD,EAAKI,SAAS,CAAEN,mBAHhB,EAAKM,SAAS,CAAEN,cAAc,GAAD,mBAAMA,GAAN,CAAqBE,O,EAOtDK,aAAe,WACb,EAAKD,SAAS,CAAEN,cAAe,M,EAGjCQ,SAAW,SAACR,GACV,OAAQA,EAAcS,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUT,EAAV,gBACF,QACE,IAAMU,EAAQV,EAAcW,KAAI,SAACT,GAC/B,OAAIF,EAAcK,QAAQH,GAAQF,EAAcS,OAAS,EACjD,GAAN,OAAUP,EAAV,KAGEF,EAAcK,QAAQH,KAAUF,EAAcS,OAAS,EACnD,GAAN,OAAUP,GAGN,OAAN,OAAcA,EAAd,oBAGF,MAAM,GAAN,OAAUQ,EAAME,KAAK,Q,4CAK3B,WAAU,IAAD,OACP,EAAiCC,KAAKf,MAA9BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,cAEf,OACE,sBAAKc,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,SACGD,KAAKL,SAASR,KAGjB,sBAAKc,UAAU,sCAAf,UACGf,EAAMY,KAAI,SAAAT,GAAI,OACb,sBAEEY,UAAWC,IACT,OACA,CAAEC,SAAUhB,EAAcG,SAASD,KAJvC,UAOE,qBACEY,UAAU,wBADZ,SAGE,wBACEA,UAAU,YACVG,KAAK,SACLC,QAAS,WACP,EAAKjB,WAAWC,EAAMF,IAJ1B,SAOGA,EAAcG,SAASD,GAAQ,SAAW,UAG/C,qBAAKY,UAAU,UAAf,SACGZ,MApBEA,MAwBiB,IAAzBF,EAAcS,QACb,wBACEK,UAAU,YACVG,KAAK,SACLC,QAASL,KAAKN,aAHhB,yB,GAhFMY,IAAMC,WA8FTvB,IClHfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dfbc0f46.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[];\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: [...goodsFromServer],\n    selectedGoods: [],\n  };\n\n  isSelected = (item: string, selectedGoods: string[]) => {\n    if (!this.state.selectedGoods.includes(item)) {\n      this.setState({ selectedGoods: [...selectedGoods, item] });\n    } else {\n      selectedGoods.splice(selectedGoods.indexOf(item), 1);\n      this.setState({ selectedGoods });\n    }\n  };\n\n  setClearList = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  setTitle = (selectedGoods: string[]) => {\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods} is selected`;\n      default: {\n        const title = selectedGoods.map((item) => {\n          if (selectedGoods.indexOf(item) < selectedGoods.length - 2) {\n            return `${item},`;\n          }\n\n          if (selectedGoods.indexOf(item) === selectedGoods.length - 2) {\n            return `${item}`;\n          }\n\n          return `and ${item} are selected`;\n        });\n\n        return `${title.join(' ')}`;\n      }\n    }\n  };\n\n  render() {\n    const { goods, selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">\n          {this.setTitle(selectedGoods)}\n        </h1>\n\n        <div className=\"ui middle aligned divided list card\">\n          {goods.map(item => (\n            <div\n              key={item}\n              className={classNames(\n                'item',\n                { selected: selectedGoods.includes(item) },\n              )}\n            >\n              <div\n                className=\"right floated content\"\n              >\n                <button\n                  className=\"ui button\"\n                  type=\"button\"\n                  onClick={() => {\n                    this.isSelected(item, selectedGoods);\n                  }}\n                >\n                  {selectedGoods.includes(item) ? 'Remove' : 'Add'}\n                </button>\n              </div>\n              <div className=\"content\">\n                {item}\n              </div>\n            </div>\n          ))}\n          {selectedGoods.length !== 0 && (\n            <button\n              className=\"ui button\"\n              type=\"button\"\n              onClick={this.setClearList}\n            >\n              X\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}